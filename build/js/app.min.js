/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _selectArea_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selectArea.js */ \"./src/js/selectArea.js\");\n/* harmony import */ var _setListeners_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./setListeners.js */ \"./src/js/setListeners.js\");\n\r\n\r\n\r\n(0,_selectArea_js__WEBPACK_IMPORTED_MODULE_0__.scriptsSelectArea)();\r\n(0,_setListeners_js__WEBPACK_IMPORTED_MODULE_1__.setListeners)();\r\n\n\n//# sourceURL=webpack://simplegulp/./src/js/app.js?");

/***/ }),

/***/ "./src/js/changeCurElement.js":
/*!************************************!*\
  !*** ./src/js/changeCurElement.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setInputsValue: () => (/* binding */ setInputsValue)\n/* harmony export */ });\nconst inputText = document.getElementById(\"inputText\");\r\nconst font = document.getElementById(\"fonts\");\r\nconst fontSizeInput = document.getElementById(\"fontSize\");\r\nconst fontSizeUnitsInput = document.getElementById(\"fontSizeUnits\");\r\nconst colorText = document.getElementById(\"color\");\r\nconst saturationText = document.getElementById(\"saturation\");\r\nconst lightnessText = document.getElementById(\"lightness\");\r\nconst alphaText = document.getElementById(\"alpha\");\r\n\r\nconst setInputsValue = (elem) => {\r\n\tif (!elem) return;\r\n\tconst { text, fontValue, fontSize, fontSizeUnits, color, saturation, lightness, alpha } = elem;\r\n\tinputText.value = text;\r\n\tfont.value = fontValue;\r\n\tfontSizeInput.value = fontSize;\r\n\tfontSizeUnitsInput.value = fontSizeUnits;\r\n\tcolorText.value = color;\r\n\tsaturationText.value = saturation;\r\n\tlightnessText.value = lightness;\r\n\talphaText.value = alpha;\r\n};\r\n\n\n//# sourceURL=webpack://simplegulp/./src/js/changeCurElement.js?");

/***/ }),

/***/ "./src/js/download.js":
/*!****************************!*\
  !*** ./src/js/download.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   download: () => (/* binding */ download)\n/* harmony export */ });\nconst downloadButton = document.getElementById(\"download\");\r\nconst canvas = document.getElementById(\"canvas\");\r\n\r\n// Сохраняем изображение из canvas.\r\nconst downloadImg = async () => {\r\n\t// Создаем элемент ссылки.\r\n\tlet link = document.createElement(\"a\");\r\n\t// Создаем атрибут download.\r\n\tlink.download = \"MEME.png\";\r\n\t// Создаем файл с данными.\r\n\tlet blob = await new Promise((resolve) => canvas.toBlob(resolve, \"image/png\"));\r\n\t// Создаем путь, подключаем его в ссылку.\r\n\tlink.href = URL.createObjectURL(blob);\r\n\t// Нажимаем на ссылку.\r\n\tlink.click();\r\n\r\n\t// Удаляем ссылку на Blob, очищаем память.\r\n\tURL.revokeObjectURL(link.href);\r\n};\r\n\r\nconst download = () => {\r\n\tdownloadButton.addEventListener(\"click\", downloadImg);\r\n};\r\n\n\n//# sourceURL=webpack://simplegulp/./src/js/download.js?");

/***/ }),

/***/ "./src/js/drawCanvas.js":
/*!******************************!*\
  !*** ./src/js/drawCanvas.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawCanvas: () => (/* binding */ drawCanvas)\n/* harmony export */ });\n/* harmony import */ var _changeCurElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./changeCurElement.js */ \"./src/js/changeCurElement.js\");\n\r\n\r\nconst drawCanvas = async () => {\r\n\tconst image = document.getElementById(\"image\");\r\n\tconst canvas = document.getElementById(\"canvas\");\r\n\tconst newTextButton = document.getElementById(\"newText\");\r\n\tconst closeButton = document.getElementById(\"close\");\r\n\tconst textInput = document.getElementById(\"inputText\");\r\n\tconst fontInput = document.getElementById(\"fonts\");\r\n\tconst fontSizeInput = document.getElementById(\"fontSize\");\r\n\tconst fontSizeUnitsInput = document.getElementById(\"fontSizeUnits\");\r\n\tconst colorInput = document.getElementById(\"color\");\r\n\tconst saturationInput = document.getElementById(\"saturation\");\r\n\tconst lightnessInput = document.getElementById(\"lightness\");\r\n\tconst alphaInput = document.getElementById(\"alpha\");\r\n\r\n\t// Переменные по умолчанию.\r\n\tlet dragAllowed = false;\r\n\tlet allCtx = [];\r\n\tlet startX;\r\n\tlet startY;\r\n\tlet offsetX = 1;\r\n\tlet offsetY = 1;\r\n\tlet z = 0;\r\n\tlet multH = 1;\r\n\tlet multW = 1;\r\n\tlet curElement = null;\r\n\tlet oldCurElement = null;\r\n\r\n\t// Создаем контекст canvas.\r\n\tconst context = await canvas.getContext(\"2d\");\r\n\t// Задаем для canvas ширину и высоту.\r\n\tcanvas.width = image.naturalWidth;\r\n\tcanvas.height = image.naturalHeight;\r\n\r\n\t// Отображаем canvas.\r\n\tcanvas.style.display = await \"block\";\r\n\r\n\t// Подгружаем картинку в canvas.\r\n\tcontext.drawImage(image, 0, 0);\r\n\t// Записываем множитель разницы размеров.\r\n\tmultH = image.naturalHeight / document.getElementById(\"canvas\").clientHeight;\r\n\tmultW = image.naturalWidth / document.getElementById(\"canvas\").clientWidth;\r\n\toffsetX = (document.getElementById(\"html\").clientWidth - document.getElementById(\"placeholder\").clientWidth) / 2;\r\n\toffsetY = document.getElementById(\"header\").clientHeight;\r\n\r\n\tconst newText = (x = 10 * multW, y = 10 * multH) => {\r\n\t\tlet color = `hsla(${colorInput.value}, ${saturationInput.value}%, ${lightnessInput.value}%, ${alphaInput.value})`;\r\n\t\tlet fontValue = fontInput.value;\r\n\t\tlet fontSize = Number(fontSizeInput.value);\r\n\t\tlet fontSizeUnits = fontSizeUnitsInput.value;\r\n\t\tdragAllowed = false;\r\n\t\tlet text = textInput.value;\r\n\r\n\t\t// Создаем объект с параметрами текста.\r\n\t\tallCtx.push({\r\n\t\t\tcolor: colorInput.value,\r\n\t\t\tsaturation: saturationInput.value,\r\n\t\t\tlightness: lightnessInput.value,\r\n\t\t\talpha: alphaInput.value,\r\n\t\t\tfontValue: fontValue,\r\n\t\t\tfontSize: fontSize,\r\n\t\t\tfontSizeUnits: fontSizeUnits,\r\n\t\t\ttext: text,\r\n\t\t\t// Выравнивание текста.\r\n\t\t\ttextBaseline: \"top\",\r\n\t\t\t// Размер, единицы измерения размера и шрифт текста.\r\n\t\t\tfont: `${fontSize}${fontSizeUnits} ${fontValue}`,\r\n\t\t\t// Цвет. colorText.value принимает значения от 0 до 360.\r\n\t\t\tfillStyle: color,\r\n\t\t\t// Содержание текста и его расположение относительно верхнего левого угла canvas.\r\n\t\t\tfillText: `${text}, ${x}, ${y})`,\r\n\t\t\t// Положение текста. z - \"глубина\"расположения текста.\r\n\t\t\tx: x,\r\n\t\t\ty: y,\r\n\t\t\tz: z,\r\n\t\t\t// Флаг, \"true\" во время перетаскивания.\r\n\t\t\tisDragging: false,\r\n\t\t});\r\n\t\t// Смена значения счетчика \"глубины расположения\" элемента.\r\n\t\tz += 1;\r\n\t};\r\n\r\n\t// Отрисовывем текст.\r\n\tfunction textRender(elem) {\r\n\t\t// Задаем параметры для текста.\r\n\t\tcontext.textBaseline = elem.textBaseline;\r\n\t\tcontext.font = elem.font;\r\n\t\tcontext.fillStyle = elem.fillStyle;\r\n\t\t// Задаем расположение текста и его содержание.\r\n\t\tcontext.fillText(elem.text, elem.x, elem.y);\r\n\t\t// Получаем и записываем размеры текста.\r\n\t\tlet metrics = context.measureText(elem.text);\r\n\t\telem.width = metrics.width;\r\n\t\telem.height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\r\n\t\tcontext.width = elem.width * multW;\r\n\t\tcontext.height = elem.height * multH;\r\n\t}\r\n\r\n\t// Рендерим canvas.\r\n\tasync function draw() {\r\n\t\t// Очищаем canvas.\r\n\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\r\n\t\t// Подгружаем картинку в canvas.\r\n\t\tawait context.drawImage(image, 0, 0);\r\n\t\t// Записываем новые множители масштабирования canvas.\r\n\t\tmultH = image.naturalHeight / document.getElementById(\"canvas\").clientHeight;\r\n\t\tmultW = image.naturalWidth / document.getElementById(\"canvas\").clientWidth;\r\n\t\t// Отрисовываем все элементы с текстом.\r\n\t\tfor (let i = 0; i < allCtx.length; i++) {\r\n\t\t\ttextRender(allCtx[i]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction removeCanvasItems() {\r\n\t\t// Очищаем canvas.\r\n\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\r\n\t\t// Очищаем массив с данными.\r\n\t\tallCtx = [];\r\n\t}\r\n\r\n\t// Перетаскивание текста.\r\n\tconst myMove = (e) => {\r\n\t\t// Проверка на возможность перемещения элемента.\r\n\t\tif (dragAllowed) {\r\n\t\t\t// Получаем текущее положение курсора.\r\n\t\t\tlet curX = Number(e.clientX * multW - offsetX * multW);\r\n\t\t\tlet curY = Number(e.clientY * multH - offsetY * multH);\r\n\t\t\t// Получаем смещение.\r\n\t\t\tlet newX = curX - startX;\r\n\t\t\tlet newY = curY - startY;\r\n\r\n\t\t\t// Проходим по массиву с текстами.\r\n\t\t\tallCtx.forEach((elem) => {\r\n\t\t\t\tif (elem.isDragging == true) {\r\n\t\t\t\t\telem.x += newX;\r\n\t\t\t\t\telem.y += newY;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// Отрисовываем, задаем элементу новое расположение.\r\n\t\t\tdraw();\r\n\t\t\tstartX = curX;\r\n\t\t\tstartY = curY;\r\n\t\t}\r\n\t};\r\n\r\n\t// Отпускание кнопки мыши. Переключаем флаги и останавливаем перетаскивание.\r\n\tconst myUp = () => {\r\n\t\tdragAllowed = false;\r\n\t\tallCtx.forEach((elem) => (elem.isDragging = false));\r\n\t};\r\n\r\n\t// Нажатие кнопки мыши.\r\n\tconst myDown = (e) => {\r\n\t\t// Получаем текущее положение курсора.\r\n\t\tlet curX = parseInt(e.clientX * multW - offsetX * multW);\r\n\t\tlet curY = parseInt(e.clientY * multH - offsetY * multH);\r\n\r\n\t\t// Переключаем флаг и создаем массив для элементов.\r\n\t\tdragAllowed = true;\r\n\t\tlet curTextArr = [];\r\n\t\t// Проходим по массиву с текстами.\r\n\t\tallCtx.forEach((elem) => {\r\n\t\t\t// Проверяем, принадлежит ли элемент в текущему положению курсора.\r\n\t\t\tif (curX > elem.x && curX < elem.x + elem.width && curY > elem.y && curY < elem.y + elem.height) {\r\n\t\t\t\t// Если принадлежит - добавляем во временный массив.\r\n\t\t\t\tcurTextArr.push(elem);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Если в массиве с текстами один элемент - разрешаем его перетаскивать.\r\n\t\tif (curTextArr.length === 1) {\r\n\t\t\tcurTextArr[0].isDragging = true;\r\n\t\t\tcurElement = curTextArr[0];\r\n\t\t\t/*\r\n\t\t\tЕсли в массиве с текстами больше одного элемента - выясняем, кто из них\r\n\t\t\tлежит \"на меньшей глубине\". Самый ближний разрешаем перетаскивать.\r\n\t\t\t*/\r\n\t\t} else if (curTextArr.length >= 2) {\r\n\t\t\tlet maxZ = curTextArr[0].z;\r\n\t\t\tlet b = curTextArr[0];\r\n\r\n\t\t\tcurTextArr.forEach((elem) => {\r\n\t\t\t\tif (maxZ < elem.z) {\r\n\t\t\t\t\tmaxZ = elem.z;\r\n\t\t\t\t\tb = elem;\r\n\t\t\t\t\tcurElement = elem;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tb.isDragging = true;\r\n\t\t} else if (curTextArr.length === 0) {\r\n\t\t\tcurElement = null;\r\n\t\t}\r\n\t\tstartX = curX;\r\n\t\tstartY = curY;\r\n\r\n\t\tif (curElement) {\r\n\t\t\tif (curElement !== oldCurElement && oldCurElement) draw();\r\n\t\t\t(0,_changeCurElement_js__WEBPACK_IMPORTED_MODULE_0__.setInputsValue)(curElement);\r\n\t\t\tcontext.strokeStyle = \"#f87c56\";\r\n\t\t\tcontext.lineWidth = 1 * multW;\r\n\t\t\tcontext.strokeRect(curElement.x, curElement.y, curElement.width, curElement.height);\r\n\t\t\toldCurElement = curElement;\r\n\t\t} else {\r\n\t\t\tif (oldCurElement) draw();\r\n\t\t\tcontext.strokeRect(0, 0, 0, 0);\r\n\t\t\toldCurElement = curElement;\r\n\t\t}\r\n\t};\r\n\r\n\t// Троттлинг для перемещения текста.\r\n\tfunction throttle(callee, timeout) {\r\n\t\t// Создаем таймер.\r\n\t\tlet timer = null;\r\n\r\n\t\treturn function perform(...args) {\r\n\t\t\t// Прекращение выполнения, если таймер уже существует.\r\n\t\t\tif (timer) return;\r\n\r\n\t\t\t// Запуск функции создает таймер.\r\n\t\t\ttimer = setTimeout(() => {\r\n\t\t\t\tcallee(...args);\r\n\r\n\t\t\t\t// По окончанию очищаем таймер.\r\n\t\t\t\tclearTimeout(timer);\r\n\t\t\t\ttimer = null;\r\n\t\t\t}, timeout);\r\n\t\t};\r\n\t}\r\n\t// Троттлинг для перемещения текста.\r\n\tconst moveWithThrottle = throttle((func, e) => {\r\n\t\tfunc(e);\r\n\t}, 30);\r\n\r\n\tconst curElementMutator = ({ target }) => {\r\n\t\tif (!curElement) return;\r\n\r\n\t\tlet id = target.id;\r\n\t\tlet value = target.value;\r\n\t\tswitch (id) {\r\n\t\t\tcase \"fonts\": {\r\n\t\t\t\tcurElement.fontValue = value;\r\n\t\t\t\tcurElement.font = `${curElement.fontSize}${curElement.fontSizeUnits} ${value}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"fontSize\": {\r\n\t\t\t\tcurElement.fontSize = value;\r\n\t\t\t\tcurElement.font = `${value}${curElement.fontSizeUnits} ${curElement.fontValue}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"fontSizeUnits\": {\r\n\t\t\t\tcurElement.fontSizeUnits = value;\r\n\t\t\t\tcurElement.font = `${curElement.fontSize}${value} ${curElement.fontValue}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"inputText\": {\r\n\t\t\t\tcurElement.text = value;\r\n\t\t\t\tcurElement.fillText = `${value}, ${curElement.x}, ${curElement.y}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"color\": {\r\n\t\t\t\tcurElement.color = value;\r\n\t\t\t\tcurElement.fillStyle = `hsla(${value}, ${curElement.saturation}%, ${curElement.lightness}%, ${curElement.alpha}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"saturation\": {\r\n\t\t\t\tcurElement.saturation = value;\r\n\t\t\t\tcurElement.fillStyle = `hsla(${curElement.color}, ${value}%, ${curElement.lightness}%, ${curElement.alpha}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"lightness\": {\r\n\t\t\t\tcurElement.lightness = value;\r\n\t\t\t\tcurElement.fillStyle = `hsla(${curElement.color}, ${curElement.saturation}%, ${value}%, ${curElement.alpha}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"alpha\": {\r\n\t\t\t\tcurElement.alpha = value;\r\n\t\t\t\tcurElement.fillStyle = `hsla(${curElement.color}, ${curElement.saturation}%, ${curElement.lightness}%, ${value}`;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdraw();\r\n\t};\r\n\r\n\tconst genNewText = () => {\r\n\t\tconst abortGenNewText = async (e) => {\r\n\t\t\tnewTextButton.textContent = \"Создать текст\";\r\n\t\t\tnewTextButton.classList.remove(\"select-area__btn-attention\");\r\n\t\t\tcanvas.onmouseup = myUp;\r\n\t\t\tnewTextButton.removeEventListener(\"click\", abortGenNewText);\r\n\t\t\tnewTextButton.addEventListener(\"click\", genNewText);\r\n\t\t};\r\n\t\tconst takeCoord = async (e) => {\r\n\t\t\tlet curX = parseInt(e.clientX * multW - offsetX * multW);\r\n\t\t\tlet curY = parseInt(e.clientY * multH - offsetY * multH);\r\n\t\t\tawait newText(curX, curY);\r\n\t\t\tdraw();\r\n\t\t\tabortGenNewText();\r\n\t\t};\r\n\t\tcurElement = null;\r\n\t\tnewTextButton.textContent = \"Выберите место\";\r\n\t\tnewTextButton.classList.add(\"select-area__btn-attention\");\r\n\t\tnewTextButton.removeEventListener(\"click\", genNewText);\r\n\r\n\t\tnewTextButton.addEventListener(\"click\", abortGenNewText);\r\n\t\tcanvas.onmouseup = takeCoord;\r\n\t};\r\n\r\n\t// Назначаем событиям функции.\r\n\tnewTextButton.addEventListener(\"click\", genNewText);\r\n\t[\r\n\t\ttextInput,\r\n\t\tfontInput,\r\n\t\tfontSizeInput,\r\n\t\tfontSizeUnitsInput,\r\n\t\tcolorInput,\r\n\t\tsaturationInput,\r\n\t\tlightnessInput,\r\n\t\talphaInput,\r\n\t].forEach((elem) => elem.addEventListener(\"input\", curElementMutator));\r\n\tcloseButton.addEventListener(\"click\", removeCanvasItems);\r\n\tcanvas.onmousedown = myDown;\r\n\tcanvas.onmouseup = myUp;\r\n\tcanvas.onmousemove = (e) => moveWithThrottle(myMove, e);\r\n\r\n\tdraw();\r\n};\r\n\n\n//# sourceURL=webpack://simplegulp/./src/js/drawCanvas.js?");

/***/ }),

/***/ "./src/js/selectArea.js":
/*!******************************!*\
  !*** ./src/js/selectArea.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scriptsSelectArea: () => (/* binding */ scriptsSelectArea)\n/* harmony export */ });\n/* harmony import */ var _download_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./download.js */ \"./src/js/download.js\");\n/* harmony import */ var _drawCanvas_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./drawCanvas.js */ \"./src/js/drawCanvas.js\");\n\r\n\r\n\r\nconst input = document.getElementById(\"input\");\r\nconst image = document.getElementById(\"image\");\r\nconst canvas = document.getElementById(\"canvas\");\r\nconst closeButton = document.getElementById(\"close\");\r\nconst downloadButton = document.getElementById(\"download\");\r\nconst newTextButton = document.getElementById(\"newText\");\r\nconst spanClickToSelect = document.getElementById(\"spanClickToSelect\");\r\nconst loadingSpinner = document.getElementById(\"loadingSpinner\");\r\n\r\n// Функция, считывающая файл.\r\nconst fileToDataUrl = (file) => {\r\n\t// Cоздаем промис.\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// Cоздаем новый объект FileReader.\r\n\t\tconst fileReader = new FileReader();\r\n\t\t// Если успешно.\r\n\t\tfileReader.addEventListener(\"load\", (evt) => {\r\n\t\t\tresolve(evt.currentTarget.result);\r\n\t\t});\r\n\t\t// Обрабатываем ошибки.\r\n\t\tfileReader.addEventListener(\"error\", (evt) => {\r\n\t\t\treject(new Error(evt.currentTarget.error));\r\n\t\t});\r\n\r\n\t\t// Возвращаем данные из файлридера.\r\n\t\tfileReader.readAsDataURL(file);\r\n\t});\r\n};\r\n\r\n// Функция, подгужающая картинку.\r\nconst handleSelect = async (evt) => {\r\n\tinput.setAttribute(\"disabled\", \"\");\r\n\tinput.style.display = \"none\";\r\n\t// Скрываем спан-плейсхолдер.\r\n\tspanClickToSelect.hidden = true;\r\n\t// Отображаем лоадер.\r\n\tloadingSpinner.hidden = false;\r\n\r\n\tconst files = [...evt.target.files];\r\n\tconst newUrl = await Promise.all(files.map((o) => fileToDataUrl(o)));\r\n\tif (newUrl.length > 0) {\r\n\t\t// Присваиваем данные в картинку.\r\n\t\timage.src = await newUrl;\r\n\t\t// image.style.display = await \"block\";\r\n\t\t// Запускаем рендеринг canvas.\r\n\t\t(0,_drawCanvas_js__WEBPACK_IMPORTED_MODULE_1__.drawCanvas)();\r\n\t\t// Скрываем лоадер.\r\n\t\tloadingSpinner.hidden = true;\r\n\t\t// Включаем прослушиватели для кнопок.\r\n\t\tcloseButton.addEventListener(\"click\", removeItem);\r\n\t\t// Скрываем лоадер.\r\n\t\tdownloadButton.removeAttribute(\"disabled\");\r\n\t\tnewTextButton.removeAttribute(\"disabled\");\r\n\t\t(0,_download_js__WEBPACK_IMPORTED_MODULE_0__.download)();\r\n\t}\r\n};\r\n\r\nconst removeItem = () => {\r\n\t// Очищаем картинку.\r\n\timage.src = \"\";\r\n\t// Скрываем canvas.\r\n\tcanvas.style.display = \"none\";\r\n\t// Отображаем спан-плейсхолдер.\r\n\tspanClickToSelect.hidden = false;\r\n\t// Включаем инпут файлов.\r\n\tinput.removeAttribute(\"disabled\");\r\n\tinput.style.display = \"inline-block\";\r\n\tdownloadButton.setAttribute(\"disabled\", \"\");\r\n\tnewTextButton.setAttribute(\"disabled\", \"\");\r\n};\r\n\r\n// Включаем инпут файлов\r\nconst scriptsSelectArea = () => {\r\n\tinput.addEventListener(\"change\", handleSelect);\r\n};\r\n\n\n//# sourceURL=webpack://simplegulp/./src/js/selectArea.js?");

/***/ }),

/***/ "./src/js/setListeners.js":
/*!********************************!*\
  !*** ./src/js/setListeners.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setListeners: () => (/* binding */ setListeners)\n/* harmony export */ });\nconst fontInput = document.getElementById(\"fonts\");\r\nconst colorInput = document.getElementById(\"color\");\r\nconst saturationInput = document.getElementById(\"saturation\");\r\nconst lightnessInput = document.getElementById(\"lightness\");\r\nconst alphaInput = document.getElementById(\"alpha\");\r\n\r\nconst setListeners = () => {\r\n\t[colorInput, saturationInput, lightnessInput, alphaInput].forEach((elem) =>\r\n\t\telem.addEventListener(\"input\", ({ target }) => {\r\n\t\t\tconst id = target.id;\r\n\t\t\tconst value = target.value;\r\n\t\t\tif (id === \"fonts\") document.getElementById(`${id}RangeValue`).innerHTML = value;\r\n\t\t\tif (value === target.max && target.id != \"color\") target.style.background = \"#f87c56\";\r\n\t\t\telse if (target.id != \"color\") target.style.background = \"transparent\";\r\n\t\t})\r\n\t);\r\n\tfontInput.addEventListener(\"keydown\", (e) => {\r\n\t\tconst value = e.target.value;\r\n\t\tconst key = e.key;\r\n\r\n\t\tif (\r\n\t\t\t(key >= \"0\" && key <= \"9\" && value.length < 14) ||\r\n\t\t\tkey == \"Backspace\" ||\r\n\t\t\tkey == \"Tab\" ||\r\n\t\t\tkey == \"Enter\" ||\r\n\t\t\tkey == \"Delete\"\r\n\t\t) {\r\n\t\t\te.target.value = value;\r\n\t\t} else {\r\n\t\t\te.preventDefault();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t});\r\n\r\n\tfontInput.addEventListener(\"change\", (e) => {\r\n\t\tif (!e.target.value) {\r\n\t\t\te.target.value = 320;\r\n\t\t}\r\n\t});\r\n};\r\n\n\n//# sourceURL=webpack://simplegulp/./src/js/setListeners.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_require__("./src/js/app.js");
/******/ 	__webpack_require__("./src/js/changeCurElement.js");
/******/ 	__webpack_require__("./src/js/download.js");
/******/ 	__webpack_require__("./src/js/drawCanvas.js");
/******/ 	__webpack_require__("./src/js/selectArea.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/setListeners.js");
/******/ 	
/******/ })()
;